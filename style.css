*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html,body{
    width: 100%;
    height: 100%;
}

#main{
    width: 100%;
    /* height: 100%; */
    /* ye hai normal height bina resposive ke liye */
    min-height: 100vh;
    /* ye hai min-height and isko hum responsive krne ke liye ure krte hain, RULE: kisi bhi parent jisko humne min-height de rakhi ho, uska 
    koi bhi child HEIGHT ko Percentage(%) me nahi le sakta.  */
}

#top{
    width: 100%;
    /* height: 60%; */
    min-height: 60vh;
    /* ab we took the min height as 60vh and before it was normal height and with 60%, buts we have to make it resposive so if the parent
    which is in this case is MAIN and main is in min-height so Parent's child can not have min-height in percentage(%) */
    /* background-color: red; */
    /* background-image: url(https://images.unsplash.com/photo-1703053207263-6f291580ae95?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D); */
    background-image: url(https://images.unsplash.com/photo-1513012320598-efcf9b835a85?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D);
    /* background-image: url() use hota hai background me image lagane ke liye */
    background-size: cover;
    /* background-size use hota hai background me image kaise area me dikhegi */
    background-position: 0 62%;
    /* background-position: use hota hai background me image ka konsa part dikhega */
}

#overlay{
    position: relative;
    width: 100%;
    /* height: 100%; */
    min-height: inherit;
    /* here as the TOP is the parent of overlay and TOP is in min-height vh so the child should also be in min-height vh and here we are
    saying that Just Inherit parent's min-height  */
    background-color: rgba(0, 0, 0, 0.03);
}

#text{
    display: flex;
    position: absolute;
    align-items: center;
    justify-content: space-between;
    bottom: 15%;
    width: 100%;
    padding: 0 8vw;
    /* VW(Viewport Width) ka matlab hota hai ki width auto adjust hogi screen ke size ke hisaab se */
    color: white;
}

#textright{
    width: 60%;
    align-items: center;
    display: flex;
    justify-content: space-between;
}

#textright p{
    font-family: Tahoma;
    font-size: 12.5px;
    width: 40%;
    letter-spacing: 0.5px;
}

#textright i{
    color: whitesmoke;
}

#text h1{
    font-size: 4.5vw;
    font-family: fantasy;
    letter-spacing: 5px;
    font-weight: 100;
}

#bottom{
    width: 100%;
    /* height: 40%; */
    min-height: 40vh;
    /* here parent is MAIN and it is in min-height vh so the child will be in min-height as well */
    display: flex;
    /* background-color: blue; */
}

#bone{
    width: 25%;
    padding: 35px;
    /* height: 100%; */
    min-height: inherit;
    /* Bottom is the parent and it is in min-height vh so the child will also be in min-height vh */
    background-color: whitesmoke;
}

#bone h3{
    font-size: 30px;
    font-family: monospace;
}

#bone p{
    font-size: 14px;
    margin-top: 25px;
    font-family: Verdana;
}

#btwo{
    width: 25%;
    /* height: 100%; */
    min-height: inherit;
    /* Bottom is the parent and it is in min-height vh so the child will also be in min-height vh */
    background-image: url(https://images.unsplash.com/photo-1697566948377-5660892e9130?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D);
    background-position: center;
    background-size: cover;
}

#bthree{
    width: 20%;
    /* height: 100%; */
    min-height: inherit;
    /* Bottom is the parent and it is in min-height vh so the child will also be in min-height vh and it inherits the vh of the parent i.e.
    40vh */
    background-color: salmon;
}

#bthreetop{
    width: 100%;
    /* height: 50%; */
    min-height: 20vh;
    /* because of parent min height will be in vh and 20vh because parent(bthree) inherits 40vh from its parent */
    background-color: orangered;
    padding: 20px;
}

#bthreetop h3{
    font-family: sans-serif;
    padding-bottom: 10px;
    font-weight: bold;
}

#bthreetop p{
    font: 12px;
    font-family: monospace;
    color: whitesmoke;
}

#bthreebottom{
    width: 100%;
    /* height: 50%; */
    min-height: 20vh;
    /* because of parent min height will be in vh and 20vh because parent(bthree) inherits 40vh from its parent */
    background-image: url(https://images.unsplash.com/photo-1496989981497-27d69cdad83e?q=80&w=1862&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D);
    background-position:center;
    background-size: cover;
}

#bthreebottom h2{
    color: whitesmoke;
    padding: 40px 60px;
    font-weight: 100;
    font-family: fantasy;
    letter-spacing: 1.5px;
}

#bfour{
    width: 30%;
    /* height: 100%; */
    min-height: inherit;
    /* Bottom is the parent and it is in min-height vh so the child will also be in min-height vh */
    background-color: grey;
    padding: 20px;
}

#bfour h3{
    font-family: monospace;
    font-size: 20px;
    color: black;
}

#bfour p{
    color: whitesmoke;
    font-weight: bold;
}

.notify1{
    display: flex;
    margin-top: 20px;
    justify-content: space-between;
}

.notify1 #photo1{
    width: 40px;
    height: 40px;
    border-radius: 50%;
    /* background-color: red; */
    background-image: url(https://images.unsplash.com/photo-1613724811140-c40cd779d3f5?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D);
    background-position: center;
    background-size: cover;
}

.notify1 p{
    width: 86%;
    font-size: 13px;
    font-family: monospace;
    padding-top: 1.1%;
}

.notify2{
    display: flex;
    margin-top: 20px;
    justify-content: space-between;
}

.notify2 #photo2{
    width: 40px;
    height: 40px;
    border-radius: 50%;
    /* background-color: red; */
    background-image: url(https://images.unsplash.com/photo-1705912090259-195fd30509e2?q=80&w=1898&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D);
    background-position: center;
    background-size: contain;
}

.notify2 p{
    width: 86%;
    font-size: 13px;
    font-family: monospace;
    padding-top: 1.1%;
}

.notify3{
    display: flex;
    margin-top: 20px;
    justify-content: space-between;
}

.notify3 #photo3{
    width: 40px;
    height: 40px;
    border-radius: 50%;
    /* background-color: red; */
    background-image: url(https://images.unsplash.com/photo-1578632767115-351597cf2477?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D);
    background-position: center;
    background-size: contain;
}

.notify3 p{
    width: 86%;
    font-size: 13px;
    font-family: monospace;
    padding-top: 1.1%;
}


                                        /* now the RESPONSIVE part */

@media(max-width: 500px){
    /* @media keyword is used to make the website responsive and here with max-width of 500px we are targeting every device and the max-width 
    for mobile phones is usually 500px */
    /* for more on @media: https://www.w3schools.com/cssref/css3_pr_mediaquery.php#:~:text=The%20%40media%20rule%20is%20used,and%20height%20of%20the%20device */
    
    #overlay #text{
        flex-direction: column;
        /* here we are giving the direction to the flex to be Column as by default it was Row */ 
        align-items: flex-start;
        /* here we are aligning the items to start from where the flex is starting */
    }

    #overlay #text h1{
        font-size: 9vh;
        /* here we gave the vh to the NOISE. word */
    }

    #overlay #text #textright{
        flex-direction: column;
        /* flext direction changed to COLUMN */
        align-items: flex-start;
        /* aligned items to starting of the flex */
        width: initial;
        /* The initial keyword is used to set a CSS property to its default value. */
        margin-top: 20px;
    }

    #overlay #text #textright p{
        width: initial;
        margin-top: 20px;
    }

    #overlay #text #textright #icons{
        margin-top: 30px;
    }


    #bottom{
        flex-direction: column;
        min-height: 30vh;
        /* here we are changing the min height for bottom part for the sake of responsiveness */
    }

    #bone{
        width: 100%;
    }

    #btwo{
        width: 100%;
        min-height: 40vh;
        /* explicitly changed the min height of the btwo */
    }

    #bthree{
        width: 100%;
    }

    #bthree #bthreebottom{
        min-height: 30vh;
        /* explicitly changed the min height of the bthreebottom */
    }

    #bthree #bthreebottom h2{
        padding: 11vh 25vw;
        /* here I have adjusted the PEACE. word for the responsiveness */
    }

    #bfour{
        width: 100%;
    }

}
